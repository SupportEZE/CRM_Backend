name: Build and Testing

on:
  workflow_dispatch:
    inputs:
      client_name:
        description: "Please Enter Backend folder name (Folder Name) To Deploy"
        required: true

jobs:
  build-and-upload:
    runs-on: ubuntu-latest

    steps:
      - name: 🚫 Validate client folder on server before proceeding
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: 43.204.204.109
          username: ec2-user
          port: 22786
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            Backend_folder="${{ github.event.inputs.client_name }}"
            if [ ! -d "/var/www/html/frontend/$Backend_folder" ]; then
              echo "❌ ERROR: Backend Folder not exist '/var/www/html/$Backend_folder' does not exist."
              exit 1
            else
              echo "✅  Folder exists. Proceeding with deployment..."
            fi
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: 🧹 Remove macOS-only package
        run: |
          jq 'del(.dependencies["@rollup/rollup-darwin-arm64"])' package.json > temp.json && mv temp.json package.json
          sed -i '/"@rollup\/rollup-darwin-arm64"/,+5d' package-lock.json
      - name: 📦 Install core dependencies
        run: npm ci --legacy-peer-deps

      - name: 📦 Install third-party UI dependencies
        run: |
          npm install sortablejs flatpickr apexcharts filepond luxon overlayscrollbars --save
          npm install @types/sortablejs @types/flatpickr @types/luxon --save-dev || true
      - name: 🔍 Run SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          curl -sSLo sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip
          unzip sonar-scanner.zip
          export PATH="$PWD/sonar-scanner-5.0.1.3006-linux/bin:$PATH"
          sonar-scanner \
            -Dsonar.projectKey=CRM-Tailwind \
            -Dsonar.sources=src \
            -Dsonar.host.url=http://13.203.181.169:9000 \
            -Dsonar.login=$SONAR_TOKEN
      - name: 🛡️ Run Bearer scan
        run: |
          curl -sSLo bearer.tar.gz https://github.com/Bearer/bearer/releases/download/v1.49.0/bearer_1.49.0_linux_amd64.tar.gz
          tar -xzf bearer.tar.gz
          chmod +x bearer
          ./bearer scan . --format sarif --output bearer-report.sarif || true
      - name: 📤 Upload Bearer Report
        uses: actions/upload-artifact@v4
        with:
          name: bearer-report
          path: bearer-report.sarif

      - name: 📧 Email scan reports before build
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: Code Scan Reports - Sonar & Bearer
          to: ${{ secrets.EMAIL_TO }}
          from: ${{ secrets.EMAIL_FROM }}
          secure: false
          attachments: bearer-report.sarif
          body: |
            Hello,
            Code Quality and Security scan has been done. Please check the reports:
            - Code Quality: http://13.203.181.169:9000/dashboard?id=CRM-Tailwind
            - Security: Bearer report attached.
            Regards,
            Nitin
      - name: 🛠️ Build Angular app
        run: npm run build -- --output-path=preview

      - name: 📦 Zip build output
        run: zip -r build.zip preview/

      - name: ☁️ Upload artifact to GitHub
        uses: actions/upload-artifact@v4
        with:
          name: angular-build
          path: build.zip

      - name: 📦 Copy build.zip to remote server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: 43.204.204.109
          username: ec2-user
          port: 22786
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: build.zip
          target: /home/ec2-user/backend

      - name: 🖥️ SSH into server and deploy
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: 43.204.204.109
          username: ec2-user
          port: 22786
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            Frontend_folder="${{ github.event.inputs.client_name }}"
            cd /home/ec2-user/backend
            unzip -o build.zip
            cp -r preview/browser/* /var/www/html/$Frontend_folder/dist
